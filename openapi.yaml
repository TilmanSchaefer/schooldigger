openapi: 3.0.1
info:
  title: SchoolDigger API V2.0
  description: "Get detailed data on over 120,000 schools and 18,500 districts in\
    \ the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on\
    \ and spending per pupil metrics"
  termsOfService: https://developer.schooldigger.com/termsofservice
  contact:
    name: SchoolDigger
    email: api@schooldigger.com
  version: v2.0
servers:
- url: https://api.schooldigger.com/
paths:
  /v2.0/autocomplete/schools:
    get:
      tags:
      - Autocomplete
      summary: Returns a simple and quick list of schools for use in a client-typed
        autocomplete
      operationId: Autocomplete_GetSchools
      parameters:
      - name: q
        in: query
        description: Search term for autocomplete (e.g. 'Lincol') (required)
        schema:
          type: string
      - name: qSearchCityStateName
        in: query
        description: Extend the search term to include city and state (e.g. 'Lincoln
          el paso' matches Lincoln Middle School in El Paso) (optional)
        schema:
          type: boolean
      - name: st
        in: query
        description: Two character state (e.g. 'CA') (optional -- leave blank to search
          entire U.S.)
        schema:
          type: string
      - name: level
        in: query
        description: "Search for schools at this level only. Valid values: 'Elementary',\
          \ 'Middle', 'High', 'Alt', 'Private' (optional - leave blank to search for\
          \ all schools)"
        schema:
          type: string
      - name: boxLatitudeNW
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: boxLongitudeNW
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: boxLatitudeSE
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: boxLongitudeSE
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: returnCount
        in: query
        description: "Number of schools to return. Valid values: 1-20. (default: 10)"
        schema:
          type: integer
          format: int32
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIAutocompleteSchoolResult'
  /v2.0/autocomplete/districts:
    get:
      tags:
      - Autocomplete
      summary: Returns a simple and quick list of districts for use in a client-typed
        autocomplete
      operationId: Autocomplete_GetDistricts
      parameters:
      - name: q
        in: query
        description: Search term for autocomplete (e.g. 'Lincol') (required)
        schema:
          type: string
      - name: st
        in: query
        description: Two character state (e.g. 'CA') (optional -- leave blank to search
          entire U.S.)
        schema:
          type: string
      - name: boxLatitudeNW
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: boxLongitudeNW
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: boxLatitudeSE
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: boxLongitudeSE
        in: query
        description: "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)\
          \ to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels\
          \ only.)"
        schema:
          type: number
          format: double
      - name: returnCount
        in: query
        description: "Number of districts to return. Valid values: 1-20. (default:\
          \ 10)"
        schema:
          type: integer
          format: int32
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIAutocompleteDistrictResult'
  /v2.0/districts:
    get:
      tags:
      - Districts
      summary: Returns a list of districts
      description: Search the SchoolDigger database for districts. You may use any
        combination of criteria as query parameters.
      operationId: Districts_GetAllDistricts2
      parameters:
      - name: st
        in: query
        description: Two character state (e.g. 'CA') - required
        required: true
        schema:
          type: string
      - name: q
        in: query
        description: "Search term - note: will match district name or city (optional)"
        schema:
          type: string
      - name: city
        in: query
        description: Search for districts in this city (optional)
        schema:
          type: string
      - name: zip
        in: query
        description: Search for districts in this 5-digit zip code (optional)
        schema:
          type: string
      - name: nearLatitude
        in: query
        description: "Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude)\
          \ (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise\
          \ API level will flag districts that include lat/long in its attendance\
          \ boundary.)"
        schema:
          type: number
          format: double
      - name: nearLongitude
        in: query
        description: "Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude)\
          \ (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise\
          \ API level will flag districts that include lat/long in its attendance\
          \ boundary.)"
        schema:
          type: number
          format: double
      - name: boundaryAddress
        in: query
        description: "Full U.S. address: flag returned districts that include this\
          \ address in its attendance boundary. Example: '123 Main St. AnyTown CA\
          \ 90001' (optional) (Enterprise API level only)"
        schema:
          type: string
      - name: distanceMiles
        in: query
        description: "Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude)\
          \ (Default 50 miles) (optional) (Pro, Enterprise API levels only)"
        schema:
          type: integer
          format: int32
      - name: isInBoundaryOnly
        in: query
        description: Return only the districts that include given location (nearLatitude/nearLongitude)
          or (boundaryAddress) in its attendance boundary (Enterprise API level only)
        schema:
          type: boolean
      - name: boxLatitudeNW
        in: query
        description: Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)
          to (BoxLongitudeSE/BoxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: boxLongitudeNW
        in: query
        description: Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)
          to (BoxLongitudeSE/BoxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: boxLatitudeSE
        in: query
        description: Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)
          to (BoxLongitudeSE/BoxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: boxLongitudeSE
        in: query
        description: Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW)
          to (BoxLongitudeSE/BoxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: page
        in: query
        description: "Page number to retrieve (optional, default: 1)"
        schema:
          type: integer
          format: int32
      - name: perPage
        in: query
        description: "Number of districts to retrieve on a page (50 max) (optional,\
          \ default: 10)"
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: "Sort list. Values are: districtname, distance, rank. For descending\
          \ order, precede with '-' i.e. -districtname (optional, default: districtname)"
        schema:
          type: string
      - name: includeUnrankedDistrictsInRankSort
        in: query
        description: "If sortBy is 'rank', this boolean determines if districts with\
          \ no rank are included in the result (optional, default: false)"
        schema:
          type: boolean
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDistrictList2'
  /v2.0/districts/{id}:
    get:
      tags:
      - Districts
      summary: Returns a detailed record for one district
      description: Retrieve a single district record from the SchoolDigger database
      operationId: Districts_GetDistrict2
      parameters:
      - name: id
        in: path
        description: The 7 digit District ID (e.g. 0642150)
        required: true
        schema:
          type: string
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDistrict12'
  /v2.0/rankings/schools/{st}:
    get:
      tags:
      - Rankings
      summary: Returns a SchoolDigger school ranking list
      operationId: Rankings_GetSchoolRank2
      parameters:
      - name: st
        in: path
        description: Two character state (e.g. 'CA')
        required: true
        schema:
          type: string
      - name: year
        in: query
        description: The ranking year (leave blank for most recent year)
        schema:
          type: integer
          format: int32
      - name: level
        in: query
        description: "Level of ranking: 'Elementary', 'Middle', or 'High'"
        schema:
          type: string
      - name: page
        in: query
        description: "Page number to retrieve (optional, default: 1)"
        schema:
          type: integer
          format: int32
      - name: perPage
        in: query
        description: "Number of schools to retrieve on a page (50 max) (optional,\
          \ default: 10)"
        schema:
          type: integer
          format: int32
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISchoolListRank2'
  /v2.0/rankings/districts/{st}:
    get:
      tags:
      - Rankings
      summary: Returns a SchoolDigger district ranking list
      operationId: Rankings_GetRank_District
      parameters:
      - name: st
        in: path
        description: Two character state (e.g. 'CA')
        required: true
        schema:
          type: string
      - name: year
        in: query
        description: The ranking year (leave blank for most recent year)
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: "Page number to retrieve (optional, default: 1)"
        schema:
          type: integer
          format: int32
      - name: perPage
        in: query
        description: "Number of districts to retrieve on a page (50 max) (optional,\
          \ default: 10)"
        schema:
          type: integer
          format: int32
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDistrictListRank2'
  /v2.0/schools:
    get:
      tags:
      - Schools
      summary: Returns a list of schools
      description: Search the SchoolDigger database for schools. You may use any combination
        of criteria as query parameters.
      operationId: Schools_GetAllSchools20
      parameters:
      - name: st
        in: query
        description: Two character state (e.g. 'CA') - required
        required: true
        schema:
          type: string
      - name: q
        in: query
        description: "Search term - note: will match school name or city (optional)"
        schema:
          type: string
      - name: qSearchSchoolNameOnly
        in: query
        description: "For parameter 'q', only search school names instead of school\
          \ and city (optional)"
        schema:
          type: boolean
      - name: districtID
        in: query
        description: Search for schools within this district (7 digit district id)
          (optional)
        schema:
          type: string
      - name: level
        in: query
        description: "Search for schools at this level. Valid values: 'Elementary',\
          \ 'Middle', 'High', 'Alt', 'Public', 'Private' (optional). 'Public' returns\
          \ all Elementary, Middle, High and Alternative schools"
        schema:
          type: string
      - name: city
        in: query
        description: Search for schools in this city (optional)
        schema:
          type: string
      - name: zip
        in: query
        description: Search for schools in this 5-digit zip code (optional)
        schema:
          type: string
      - name: isMagnet
        in: query
        description: "True = return only magnet schools, False = return only non-magnet\
          \ schools (optional) (Pro, Enterprise API levels only)"
        schema:
          type: boolean
      - name: isCharter
        in: query
        description: "True = return only charter schools, False = return only non-charter\
          \ schools (optional) (Pro, Enterprise API levels only)"
        schema:
          type: boolean
      - name: isVirtual
        in: query
        description: "True = return only virtual schools, False = return only non-virtual\
          \ schools (optional) (Pro, Enterprise API levels only)"
        schema:
          type: boolean
      - name: isTitleI
        in: query
        description: "True = return only Title I schools, False = return only non-Title\
          \ I schools (optional) (Pro, Enterprise API levels only)"
        schema:
          type: boolean
      - name: isTitleISchoolwide
        in: query
        description: "True = return only Title I school-wide schools, False = return\
          \ only non-Title I school-wide schools (optional) (Pro, Enterprise API levels\
          \ only)"
        schema:
          type: boolean
      - name: nearLatitude
        in: query
        description: "Search for schools within (distanceMiles) of (nearLatitude)/(nearLongitude)\
          \ (e.g. 44.982560) (optional) (Pro, Enterprise API levels only.)"
        schema:
          type: number
          format: double
      - name: nearLongitude
        in: query
        description: "Search for schools within (distanceMiles) of (nearLatitude)/(nearLongitude)\
          \ (e.g. -124.289185) (optional) (Pro, Enterprise API levels only.)"
        schema:
          type: number
          format: double
      - name: nearAddress
        in: query
        description: "Search for schools within (distanceMiles) of this address. Example:\
          \ '123 Main St. AnyTown CA 90001' (optional) (Pro, Enterprise API level\
          \ only) IMPORTANT NOTE: If you have the lat/long of the address, use nearLatitude\
          \ and nearLongitude instead for much faster response times"
        schema:
          type: string
      - name: distanceMiles
        in: query
        description: "Search for schools within (distanceMiles) of (nearLatitude)/(nearLongitude)\
          \ (Default 5 miles) (optional) (Pro, Enterprise API levels only)"
        schema:
          type: integer
          format: int32
      - name: boundaryLatitude
        in: query
        description: Search for schools that include this (boundaryLatitude)/(boundaryLongitude)
          in its attendance boundary (e.g. 44.982560) (optional) (Requires School
          Boundary API Plan add-on. Calls with this parameter supplied will count
          toward your monthly call limit.)
        schema:
          type: number
          format: double
      - name: boundaryLongitude
        in: query
        description: Search for schools that include this (boundaryLatitude)/(boundaryLongitude)
          in its attendance boundary (e.g. -124.289185) (optional) (Requires School
          Boundary API Plan add-on. Calls with this parameter supplied will count
          toward your monthly call limit.
        schema:
          type: number
          format: double
      - name: boundaryAddress
        in: query
        description: "Full U.S. address: flag returned schools that include this address\
          \ in its attendance boundary. Example: '123 Main St. AnyTown CA 90001' (optional)\
          \ (Requires School Boundary API Plan add-on. Calls with this parameter supplied\
          \ will count toward your monthly call limit.) IMPORTANT NOTE: If you have\
          \ the lat/long of the address, use boundaryLatitude and boundaryLongitude\
          \ instead for much faster response times"
        schema:
          type: string
      - name: isInBoundaryOnly
        in: query
        description: Return only the schools that include given location (boundaryLatitude/boundaryLongitude)
          or (boundaryAddress) in its attendance boundary (Requires School Boundary
          API Plan add-on.)
        schema:
          type: boolean
      - name: boxLatitudeNW
        in: query
        description: Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW)
          to (boxLongitudeSE/boxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: boxLongitudeNW
        in: query
        description: Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW)
          to (boxLongitudeSE/boxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: boxLatitudeSE
        in: query
        description: Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW)
          to (boxLongitudeSE/boxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: boxLongitudeSE
        in: query
        description: Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW)
          to (boxLongitudeSE/boxLatitudeSE) (optional)
        schema:
          type: number
          format: double
      - name: page
        in: query
        description: "Page number to retrieve (optional, default: 1)"
        schema:
          type: integer
          format: int32
      - name: perPage
        in: query
        description: "Number of schools to retrieve on a page (50 max) (optional,\
          \ default: 10)"
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: "Sort list. Values are: schoolname, distance, rank. For descending\
          \ order, precede with '-' i.e. -schoolname (optional, default: schoolname)"
        schema:
          type: string
      - name: includeUnrankedSchoolsInRankSort
        in: query
        description: "If sortBy is 'rank', this boolean determines if schools with\
          \ no rank are included in the result (optional, default: false)"
        schema:
          type: boolean
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISchoolList2'
  /v2.0/schools/{id}:
    get:
      tags:
      - Schools
      summary: Returns a detailed record for one school
      description: Retrieve a school record from the SchoolDigger database
      operationId: Schools_GetSchool20
      parameters:
      - name: id
        in: path
        description: The 12 digit School ID (e.g. 064215006903)
        required: true
        schema:
          type: string
      - name: appID
        in: query
        description: Your API app id
        required: true
        schema:
          type: string
          x-data-threescale-name: app_ids
        x-data-threescale-name: app_ids
      - name: appKey
        in: query
        description: Your API app key
        required: true
        schema:
          type: string
          x-data-threescale-name: app_keys
        x-data-threescale-name: app_keys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISchool20Full'
components:
  schemas:
    APIAutocompleteSchoolResult:
      type: object
      properties:
        schoolMatches:
          type: array
          description: List of the schools that match the query
          items:
            $ref: '#/components/schemas/APISchoolAC'
    APISchoolAC:
      type: object
      properties:
        schoolid:
          type: string
          description: "SchoolDigger School ID Number (12 digits). Use /schools/{schoolID}\
            \ to retrieve the full school record"
        schoolName:
          type: string
          description: School name
        city:
          type: string
          description: School location city
        state:
          type: string
          description: School location state
        zip:
          type: string
          description: School location zip code
        schoolLevel:
          type: string
          description: "The level of school (Elementary, Middle, High, Private, Alternative)"
        lowGrade:
          type: string
          description: "The low grade served by this school (PK = Prekindergarten,\
            \ K = Kindergarten)"
        highGrade:
          type: string
          description: The high grade served by this school
        latitude:
          type: number
          description: School location latitude
          format: double
        longitude:
          type: number
          description: School location longitude
          format: double
        hasBoundary:
          type: boolean
          description: States whether there is an attendance boundary available for
            this school
        rank:
          type: integer
          description: Statewide rank of this School
          format: int32
        rankOf:
          type: integer
          description: Count of schools ranked at this state/level
          format: int32
        rankStars:
          type: integer
          description: "The number of stars SchoolDigger awarded in the ranking of\
            \ the school (0-5, 5 is best)"
          format: int32
    APIAutocompleteDistrictResult:
      type: object
      properties:
        districtMatches:
          type: array
          description: List of the districts that match the query
          items:
            $ref: '#/components/schemas/APIDistrictAC'
    APIDistrictAC:
      type: object
      properties:
        districtid:
          type: string
          description: "SchoolDigger District ID Number (7 digits). Use /districts/{districtID}\
            \ to retrieve the full school record"
        districtName:
          type: string
          description: District name
        city:
          type: string
          description: District location city
        state:
          type: string
          description: District location state
        zip:
          type: string
          description: District location zip code
        lowGrade:
          type: string
          description: "The low grade served by this district (PK = Prekindergarten,\
            \ K = Kindergarten)"
        highGrade:
          type: string
          description: The high grade served by this district
        latitude:
          type: number
          description: District location latitude
          format: double
        longitude:
          type: number
          description: District location longitude
          format: double
        hasBoundary:
          type: boolean
          description: States whether there is an attendance boundary available for
            this District
        rank:
          type: integer
          description: Statewide rank of this district
          format: int32
        rankOf:
          type: integer
          description: Count of districts ranked at this state/level
          format: int32
        rankStars:
          type: integer
          description: "The number of districts SchoolDigger awarded in the ranking\
            \ of the district (0-5, 5 is best)"
          format: int32
    APIDistrictList2:
      type: object
      properties:
        numberOfDistricts:
          type: integer
          description: The total count of districts that match your query
          format: int32
        numberOfPages:
          type: integer
          description: The total count of pages in your query list based on given
            per_page value
          format: int32
        districtList:
          type: array
          items:
            $ref: '#/components/schemas/APIDistrict2Summary'
    APIDistrict2Summary:
      type: object
      properties:
        districtID:
          type: string
          description: "SchoolDigger District ID Number (7 digits). Use /districts/{districtID}\
            \ to retrieve the entire district record"
        districtName:
          type: string
          description: District name
        phone:
          type: string
          description: District phone number
        url:
          type: string
          description: SchoolDigger URL for this district
        address:
          $ref: '#/components/schemas/APILocation'
        locationIsWithinBoundary:
          type: boolean
          description: Indicates whether this school's boundary includes the specified
            location from nearLatitude/nearLongitude or boundaryAddress (Enterprise
            API level)
        hasBoundary:
          type: boolean
          description: "Indicates that an attendance boundary is available for this\
            \ district. (To retrieve, look up district with /districts/{id})"
        distance:
          type: number
          description: Distance from nearLatitude/nearLongitude (if supplied)
          format: double
        isWithinBoundary:
          type: boolean
          description: Indicates whether this district's boundary includes the specified
            location from nearLatitude/nearLongitude
        county:
          $ref: '#/components/schemas/APICounty'
        lowGrade:
          type: string
          description: "The low grade served by this district (PK = Prekindergarten,\
            \ K = Kindergarten)"
        highGrade:
          type: string
          description: The high grade served by this district
        numberTotalSchools:
          type: integer
          description: Count of schools in the district
          format: int32
        numberPrimarySchools:
          type: integer
          description: Count of schools designated as primary schools
          format: int32
        numberMiddleSchools:
          type: integer
          description: Count of schools designated as middle schools
          format: int32
        numberHighSchools:
          type: integer
          description: Count of schools designated as high schools
          format: int32
        numberAlternativeSchools:
          type: integer
          description: Count of schools designated as other/alternative schools
          format: int32
        rankHistory:
          type: array
          description: SchoolDigger yearly rank history of the district
          items:
            $ref: '#/components/schemas/APILEARankHistory'
        districtYearlyDetails:
          type: array
          description: District yearly metrics
          items:
            $ref: '#/components/schemas/APILEAYearlyDetail'
    APILocation:
      type: object
      properties:
        latLong:
          $ref: '#/components/schemas/APILatLong'
        street:
          type: string
        city:
          type: string
        state:
          type: string
        stateFull:
          type: string
          description: Full state name (WA = Washington)
        zip:
          type: string
        zip4:
          type: string
        cityURL:
          type: string
          description: SchoolDigger URL for schools in this city
        zipURL:
          type: string
          description: SchoolDigger URL for schools in this zip code
        html:
          type: string
          description: HTML formatted address
    APICounty:
      type: object
      properties:
        countyName:
          type: string
          description: County in which the school or district is located
        countyURL:
          type: string
          description: SchoolDigger URL for all schools in this county
    APILEARankHistory:
      type: object
      properties:
        year:
          type: integer
          description: School year (2017 - 2016-17)
          format: int32
        rank:
          type: integer
          description: Statewide rank of this district
          format: int32
        rankOf:
          type: integer
          description: Count of district ranked in this state
          format: int32
        rankStars:
          type: integer
          description: "The number of stars SchoolDigger awarded in the ranking of\
            \ the district (0-5, 5 is best)"
          format: int32
        rankStatewidePercentage:
          type: number
          description: Percentile of this district's rank (e.g. this district performed
            better than (x)% of this state's districts)
          format: double
        rankScore:
          type: number
          description: The rank score calculated by SchoolDigger (see https://www.schooldigger.com/aboutranking.aspx)
          format: double
    APILEAYearlyDetail:
      type: object
      properties:
        year:
          type: integer
          description: School year (2018 = 2017-18)
          format: int32
        numberOfStudents:
          type: integer
          description: Number of students enrolled in the district
          format: int32
        numberOfSpecialEdStudents:
          type: integer
          description: The number of students having a written Individualized Education
            Program (IEP) under the Individuals With Disabilities Education Act (IDEA)
          format: int32
        numberOfEnglishLanguageLearnerStudents:
          type: integer
          description: The number of English language learner (ELL) students served
            in appropriate programs
          format: int32
        numberOfTeachers:
          type: number
          description: Number of full-time equivalent teachers employed by the district
          format: double
        numberOfTeachersPK:
          type: number
          description: Number of full-time equivalent pre-kindergarten teachers employed
            by the district
          format: double
        numberOfTeachersK:
          type: number
          description: Number of full-time equivalent kindergarten teachers employed
            by the district
          format: double
        numberOfTeachersElementary:
          type: number
          description: Number of full-time equivalent elementary teachers employed
            by the district
          format: double
        numberOfTeachersSecondary:
          type: number
          description: Number of full-time equivalent secondary teachers employed
            by the district
          format: double
        numberOfAids:
          type: number
          description: Number of full-time equivalent instructional aids employed
            by the district
          format: double
        numberOfCoordsSupervisors:
          type: number
          description: Number of full-time equivalent instructional coordinators/supervisors
            employed by the district
          format: double
        numberOfGuidanceElem:
          type: number
          description: Number of full-time equivalent elementary guidance counselors
            employed by the district
          format: double
        numberOfGuidanceSecondary:
          type: number
          description: Number of full-time equivalent secondary guidance counselors
            employed by the district
          format: double
        numberOfGuidanceTotal:
          type: number
          description: Total number of full-time equivalent guidance counselors employed
            by the district
          format: double
        numberOfLibrarians:
          type: number
          description: Number of full-time equivalent librarians/media specialists
            employed by the district
          format: double
        numberOfLibraryStaff:
          type: number
          description: Number of full-time equivalent librarians/media support staff
            employed by the district
          format: double
        numberOfLEAAdministrators:
          type: number
          description: Number of full-time equivalent LEA administrators employed
            by the district (LEA)
          format: double
        numberOfLEASupportStaff:
          type: number
          description: Number of full-time equivalent LEA administrative support staff
            employed by the district (LEA)
          format: double
        numberOfSchoolAdministrators:
          type: number
          description: Number of full-time equivalent school administrators employed
            by the district (LEA)
          format: double
        numberOfSchoolAdminSupportStaff:
          type: number
          description: Number of full-time equivalent school administrative support
            staff employed by the district (LEA)
          format: double
        numberOfStudentSupportStaff:
          type: number
          description: Number of full-time equivalent student support services staff
            employed by the district (LEA)
          format: double
        numberOfOtherSupportStaff:
          type: number
          description: Number of full-time equivalent all other support staff employed
            by the district (LEA)
          format: double
    APILatLong:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    APIDistrict12:
      type: object
      properties:
        districtID:
          type: string
          description: SchoolDigger District ID Number (7 digits)
        districtName:
          type: string
          description: District name
        phone:
          type: string
          description: District phone number
        url:
          type: string
          description: SchoolDigger URL for this district
        address:
          $ref: '#/components/schemas/APILocation'
        boundary:
          $ref: '#/components/schemas/APIBoundary12'
        isWithinBoundary:
          type: boolean
          description: Indicates whether this district's boundary includes the specified
            location from nearLatitude/nearLongitude
        county:
          $ref: '#/components/schemas/APICounty'
        lowGrade:
          type: string
          description: "The low grade served by this district (PK = Prekindergarten,\
            \ K = Kindergarten)"
        highGrade:
          type: string
          description: The high grade served by this district
        numberTotalSchools:
          type: integer
          format: int32
        numberPrimarySchools:
          type: integer
          format: int32
        numberMiddleSchools:
          type: integer
          format: int32
        numberHighSchools:
          type: integer
          format: int32
        numberAlternativeSchools:
          type: integer
          format: int32
        rankHistory:
          type: array
          description: SchoolDigger yearly rank history of the district
          items:
            $ref: '#/components/schemas/APILEARankHistory'
        districtYearlyDetails:
          type: array
          description: District yearly metrics
          items:
            $ref: '#/components/schemas/APILEAYearlyDetail'
        testScores:
          type: array
          description: Test scores (district and state) -- requires Pro or Enterprise
            level API subscription
          items:
            $ref: '#/components/schemas/APITestScoreWrapper'
    APIBoundary12:
      type: object
      properties:
        polylineCollection:
          type: array
          description: "Collection of one or more polylines that can be used to create\
            \ the boundary on a map. NOTE: this value is JSON encoded. Specifically,\
            \ backslashes will be returned escaped (two backslashes). Make sure to\
            \ decode the polyline before you use it"
          items:
            $ref: '#/components/schemas/APIPolyline'
        polylines:
          type: string
          description: Collection of latitude/longitude vertices to form a polygon
            representing the boundary
        hasBoundary:
          type: boolean
          description: States whether there is a boundary available
    APITestScoreWrapper:
      type: object
      properties:
        test:
          type: string
          description: The name of the state-administered test
        subject:
          type: string
          description: Test subject
        year:
          type: integer
          description: Year test was administered (2018 = 2017-18)
          format: int32
        grade:
          type: string
        schoolTestScore:
          $ref: '#/components/schemas/APITestScore'
        districtTestScore:
          $ref: '#/components/schemas/APITestScore'
        stateTestScore:
          $ref: '#/components/schemas/APITestScore'
        tier1:
          type: string
          description: Tier 1 test score description (Enterprise API level only)
        tier2:
          type: string
          description: Tier 2 test score description (Enterprise API level only)
        tier3:
          type: string
          description: Tier 3 test score description (Enterprise API level only)
        tier4:
          type: string
          description: Tier 4 test score description (Enterprise API level only)
        tier5:
          type: string
          description: Tier 5 test score description (Enterprise API level only)
    APIPolyline:
      type: object
      properties:
        polylineOverlayEncodedPoints:
          type: string
          description: "Polyline for use with Google Maps or other mapping software.\
            \ NOTE: this value is JSON encoded. Specifically, backslashes will be\
            \ returned escaped (two backslashes). Make sure to decode the polyline\
            \ before you use it"
        numberEncodedPoints:
          type: integer
          description: Number of encoded points in polyline
          format: int32
    APITestScore:
      type: object
      properties:
        studentsEligible:
          type: integer
          description: Count of students eligible to take test
          format: int32
        studentsTested:
          type: integer
          description: Count of students tested
          format: int32
        meanScaledScore:
          type: number
          description: Mean scale score
          format: float
        percentMetStandard:
          type: number
          description: Percent of students meeting state standard
          format: float
        numberMetStandard:
          type: number
          description: Count of students meeting state standard
          format: float
        numTier1:
          type: integer
          description: Count of students performing at tier 1 (Enterprise API level
            only)
          format: int32
        numTier2:
          type: integer
          description: Count of students performing at tier 2 (Enterprise API level
            only)
          format: int32
        numTier3:
          type: integer
          description: Count of students performing at tier 3 (Enterprise API level
            only)
          format: int32
        numTier4:
          type: integer
          description: Count of students performing at tier 4 (Enterprise API level
            only)
          format: int32
        numTier5:
          type: integer
          description: Count of students performing at tier 5 (Enterprise API level
            only)
          format: int32
        percentTier1:
          type: number
          description: Percent of students performing at tier 1 (Enterprise API level
            only)
          format: float
        percentTier2:
          type: number
          description: Percent of students performing at tier 2 (Enterprise API level
            only)
          format: float
        percentTier3:
          type: number
          description: Percent of students performing at tier 3 (Enterprise API level
            only)
          format: float
        percentTier4:
          type: number
          description: Percent of students performing at tier 4 (Enterprise API level
            only)
          format: float
        percentTier5:
          type: number
          description: Percent of students performing at tier 5 (Enterprise API level
            only)
          format: float
    APISchoolListRank2:
      type: object
      properties:
        rankYear:
          type: integer
          description: Year this ranking list represents (2018 = 2017-18)
          format: int32
        rankYearCompare:
          type: integer
          description: Year rankings returned for comparison (2018 = 2017-18)
          format: int32
        rankYearsAvailable:
          type: array
          description: The years for which SchoolDigger rankings are available for
            this state and level
          items:
            type: integer
            format: int32
        numberOfSchools:
          type: integer
          description: The total count of schools in this ranking list
          format: int32
        numberOfPages:
          type: integer
          description: The total count of pages this ranking list based on given per_page
            value
          format: int32
        schoolList:
          type: array
          description: The schools in the ranking list
          items:
            $ref: '#/components/schemas/APISchool2Summary'
    APISchool2Summary:
      type: object
      properties:
        schoolid:
          type: string
          description: SchoolDigger School ID Number (12 digits)
        schoolName:
          type: string
          description: School name
        phone:
          type: string
          description: School phone number
        url:
          type: string
          description: SchoolDigger URL for this school
        urlCompare:
          type: string
          description: SchoolDigger URL for comparing this school to nearby schools
        address:
          $ref: '#/components/schemas/APILocation'
        distance:
          type: number
          description: "Distance from nearLatitude/nearLongitude, boundaryLatitude/boundaryLongitude,\
            \ or boundaryAddress (if supplied)"
          format: double
        locale:
          type: string
          description: NCES Locale of school (https://nces.ed.gov/ccd/rural_locales.asp)
        lowGrade:
          type: string
          description: "The low grade served by this school (PK = Prekindergarten,\
            \ K = Kindergarten)"
        highGrade:
          type: string
          description: The high grade served by this school
        schoolLevel:
          type: string
          description: "The level of school (Elementary, Middle, High, Private, Alternative)"
        isCharterSchool:
          type: string
          description: Indicates if school is a charter school (Yes/No/n-a)
        isMagnetSchool:
          type: string
          description: Indicates if school is a magnet school (Yes/No/n-a)
        isVirtualSchool:
          type: string
          description: Indicates if school is a virtual school (Yes/No/n-a)
        isTitleISchool:
          type: string
          description: Indicates if school is a Title I school (Yes/No/n-a)
        isTitleISchoolwideSchool:
          type: string
          description: Indicates if a school-wide Title I school (Yes/No/n-a)
        hasBoundary:
          type: boolean
          description: Indicates that an attendance boundary is available for this
            school.
        locationIsWithinBoundary:
          type: boolean
          description: Indicates whether this school's boundary includes the specified
            location from boundaryLatitude/boundaryLongitude or boundaryAddress. (School
            Boundary Add-on Package required)
        district:
          $ref: '#/components/schemas/APIDistrictSum'
        county:
          $ref: '#/components/schemas/APICounty'
        rankHistory:
          type: array
          description: "SchoolDigger yearly rank history of the school. To retrieve\
            \ all years, call /schools/{id}."
          items:
            $ref: '#/components/schemas/APIRankHistory'
        rankMovement:
          type: integer
          description: Returns the movement of rank for this school between current
            and previous year
          format: int32
        schoolYearlyDetails:
          type: array
          description: "School Yearly metrics. To retrieve all years, call /schools/{id}."
          items:
            $ref: '#/components/schemas/APIYearlyDemographics'
        isPrivate:
          type: boolean
          description: Indicates if school is a private school (Yes/No)
        privateDays:
          type: integer
          description: Days in the school year (private schools only)
          format: int32
        privateHours:
          type: number
          description: Hours in the school day (private schools only)
          format: double
        privateHasLibrary:
          type: boolean
          description: Indicates if the school has a library (private schools only)
        privateCoed:
          type: string
          description: Coed/Boys/Girls (private schools only)
        privateOrientation:
          type: string
          description: Affiliation of the school (private schools only)
      description: "APISchool2Summary: A summary of a school record. For the full\
        \ school record, call /schools/{id}"
    APIDistrictSum:
      type: object
      properties:
        districtID:
          type: string
          description: The 7 digit SchoolDigger District id number
        districtName:
          type: string
        url:
          type: string
          description: The URL to see the district details on SchoolDigger
        rankURL:
          type: string
          description: The URL to see the district in the SchoolDigger ranking list
      description: District Summary
    APIRankHistory:
      type: object
      properties:
        year:
          type: integer
          description: School year (2017 - 2016-17)
          format: int32
        rank:
          type: integer
          description: Statewide rank of this School
          format: int32
        rankOf:
          type: integer
          description: Count of schools ranked at this state/level
          format: int32
        rankStars:
          type: integer
          description: "The number of stars SchoolDigger awarded in the ranking of\
            \ the school (0-5, 5 is best)"
          format: int32
        rankLevel:
          type: string
          description: "The level for which this school is ranked (Elementary, Middle,\
            \ High)"
        rankStatewidePercentage:
          type: number
          description: Percentile of this school's rank (e.g. this school performed
            better than (x)% of this state's elementary schools)
          format: double
        averageStandardScore:
          type: number
          description: "The Average Standard score calculated by SchoolDigger (see:\
            \ https://www.schooldigger.com/aboutrankingmethodology.aspx)"
          format: double
    APIYearlyDemographics:
      type: object
      properties:
        year:
          type: integer
          description: School year (2018 = 2017-18)
          format: int32
        numberOfStudents:
          type: integer
          description: Count of students attending the school
          format: int32
        percentFreeDiscLunch:
          type: number
          description: Percent of students receiving a free or discounted lunch in
            the National School Lunch Program
          format: double
        percentofAfricanAmericanStudents:
          type: number
          format: double
        percentofAsianStudents:
          type: number
          format: double
        percentofHispanicStudents:
          type: number
          format: double
        percentofIndianStudents:
          type: number
          format: double
        percentofPacificIslanderStudents:
          type: number
          format: double
        percentofWhiteStudents:
          type: number
          format: double
        percentofTwoOrMoreRaceStudents:
          type: number
          format: double
        percentofUnspecifiedRaceStudents:
          type: number
          format: double
        teachersFulltime:
          type: number
          description: Number of full-time equivalent teachers employed at the school
          format: double
        pupilTeacherRatio:
          type: number
          description: Number of students / number of full-time equivalent teachers
          format: double
        numberofAfricanAmericanStudents:
          type: integer
          description: "NCES definition: A person having origins in any of the black\
            \ racial groups of Africa.  (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofAsianStudents:
          type: integer
          description: "NCES definition: A person having origins in any of the original\
            \ peoples of the Far East, Southeast Asia, or the Indian subcontinent,\
            \ including, for example, Cambodia, China, India, Japan, Korea, Malaysia,\
            \ Pakistan, the Philippine Islands, Thailand, and Vietnam.  (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofHispanicStudents:
          type: integer
          description: "NCES definition: A person of Cuban, Mexican, Puerto Rican,\
            \ South or Central American, or other Spanish culture or origin, regardless\
            \ of race. (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofIndianStudents:
          type: integer
          description: "NCES definition: A person having origins in any of the original\
            \ peoples of the Far East, Southeast Asia, or the Indian subcontinent,\
            \ including, for example, Cambodia, China, India, Japan, Korea, Malaysia,\
            \ Pakistan, the Philippine Islands, Thailand, and Vietnam. (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofPacificIslanderStudents:
          type: integer
          description: "NCES definition: A person having origins in any of the original\
            \ peoples of Hawaii, Guam, Samoa, or other Pacific Islands. (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofWhiteStudents:
          type: integer
          description: "NCES definition: A person having origins in any of the original\
            \ peoples of Europe, the Middle East, or North Africa. (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofTwoOrMoreRaceStudents:
          type: integer
          description: "NCES definition: Includes any combination of two or more races\
            \ and not Hispanic/Latino ethnicity. (https://nces.ed.gov/statprog/2002/std1_5.asp)"
          format: int32
        numberofUnspecifiedRaceStudents:
          type: integer
          format: int32
    APIDistrictListRank2:
      type: object
      properties:
        rankYear:
          type: integer
          description: Year this ranking list represents (2018 = 2017-18)
          format: int32
        rankYearCompare:
          type: integer
          description: Year rankings returned for comparison (2018 = 2017-18)
          format: int32
        rankYearsAvailable:
          type: array
          description: The years for which SchoolDigger district rankings are available
            for this state
          items:
            type: integer
            format: int32
        numberOfDistricts:
          type: integer
          description: The total count of districts in the entire rank list
          format: int32
        numberOfPages:
          type: integer
          description: The total count of pages in your query list based on given
            per_page value
          format: int32
        districtList:
          type: array
          items:
            $ref: '#/components/schemas/APIDistrict2Summary'
        rankCompareYear:
          type: integer
          format: int32
    APISchoolList2:
      type: object
      properties:
        numberOfSchools:
          type: integer
          description: The total count of schools that match your query
          format: int32
        numberOfPages:
          type: integer
          description: The total count of pages in your query list based on given
            per_page value
          format: int32
        schoolList:
          type: array
          items:
            $ref: '#/components/schemas/APISchool2Summary'
    APISchool20Full:
      type: object
      properties:
        schoolid:
          type: string
          description: SchoolDigger School ID Number (12 digits)
        schoolName:
          type: string
          description: School name
        phone:
          type: string
          description: School phone number
        url:
          type: string
          description: URL of the school's public website
        urlSchoolDigger:
          type: string
          description: SchoolDigger URL for this school
        urlCompareSchoolDigger:
          type: string
          description: SchoolDigger URL for comparing this school to nearby schools
        address:
          $ref: '#/components/schemas/APILocation'
        locale:
          type: string
          description: NCES Locale of school (https://nces.ed.gov/ccd/rural_locales.asp)
        lowGrade:
          type: string
          description: "The low grade served by this school (PK = Prekindergarten,\
            \ K = Kindergarten)"
        highGrade:
          type: string
          description: The high grade served by this school
        schoolLevel:
          type: string
          description: "The level of school (Elementary, Middle, High, Private, Alternative)"
        isCharterSchool:
          type: string
          description: Indicates if school is a charter school (Yes/No/n-a)
        isMagnetSchool:
          type: string
          description: Indicates if school is a magnet school (Yes/No/n-a)
        isVirtualSchool:
          type: string
          description: Indicates if school is a virtual school (Yes/No/n-a)
        isTitleISchool:
          type: string
          description: Indicates if school is a Title I school (Yes/No/n-a)
        isTitleISchoolwideSchool:
          type: string
          description: Indicates if a school-wide Title I school (Yes/No/n-a)
        isPrivate:
          type: boolean
          description: Indicates if school is a private school (Yes/No)
        privateDays:
          type: integer
          description: Days in the school year (private schools only)
          format: int32
        privateHours:
          type: number
          description: Hours in the school day (private schools only)
          format: double
        privateHasLibrary:
          type: boolean
          description: Indicates if the school has a library (private schools only)
        privateCoed:
          type: string
          description: Coed/Boys/Girls (private schools only)
        privateOrientation:
          type: string
          description: Affiliation of the school (private schools only)
        district:
          $ref: '#/components/schemas/APIDistrictSum'
        county:
          $ref: '#/components/schemas/APICounty'
        reviews:
          type: array
          description: List of reviews for this school submitted by SchoolDigger site
            visitors
          items:
            $ref: '#/components/schemas/APISchoolReview'
        finance:
          type: array
          description: School finance (Pro and Enterprise API level only)
          items:
            $ref: '#/components/schemas/APISchoolFinance'
        rankHistory:
          type: array
          description: SchoolDigger yearly rank history of the school
          items:
            $ref: '#/components/schemas/APIRankHistory'
        rankMovement:
          type: integer
          description: Returns the movement of rank for this school between current
            and previous year
          format: int32
        testScores:
          type: array
          description: Test scores (including district and state) -- requires Pro
            or Enterprise level API subscription
          items:
            $ref: '#/components/schemas/APITestScoreWrapper'
        schoolYearlyDetails:
          type: array
          description: School Yearly metrics
          items:
            $ref: '#/components/schemas/APIYearlyDemographics'
    APISchoolReview:
      type: object
      properties:
        submitDate:
          type: string
          description: The date the review was submitted (mm/dd/yyyy)
        numberOfStars:
          type: integer
          description: Number of stars - 1 (poor) to 5 (excellent)
          format: int32
        comment:
          type: string
          description: Comment left by reviewer (html encoded)
        submittedBy:
          type: string
          description: "Reviewer type (parent, student, teacher, principal, citizen)"
    APISchoolFinance:
      type: object
      properties:
        year:
          type: integer
          description: Fiscal School year (2021 = 2020-2021 year)
          format: int32
        spendingPerStudent:
          type: number
          description: Total spending per student from all funds (Pro or Enterprise
            level only)
          format: float
        spendingFederalPersonnel:
          type: number
          description: Spending per student for Personnel at the Federal Level (Enterprise
            level only)
          format: float
        spendingFederalNonPersonnel:
          type: number
          description: Spending per student for Non-personnel at the Federal Level
            (Enterprise level only)
          format: float
        spendingStateLocalPersonnel:
          type: number
          description: Spending per student for Personnel at the State and Local Level
            (Enterprise level only)
          format: float
        spendingStateLocalNonPersonnel:
          type: number
          description: Spending per student for Non-personnel at the State and Local
            Level (Enterprise level only)
          format: float
        spendingPerStudentFederal:
          type: number
          description: Spending per student at the Federal Level (Enterprise level
            only)
          format: float
        spendingPerStudentStateLocal:
          type: number
          description: Spending per student at the State and Local Level (Enterprise
            level only)
          format: float
x-original-swagger-version: "2.0"
